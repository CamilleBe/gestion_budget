{% extends 'base.html.twig' %}

{% block title %}Nouvelle dépense - {{ parent() }}{% endblock %}

{% block body %}
<div class="container-fluid">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <div>
                    <h1 class="h2 mb-0">
                        <i class="bi bi-arrow-down-circle text-danger me-2"></i>
                        Nouvelle dépense
                    </h1>
                    {% if period %}
                        <p class="text-muted">Ajouter à la période : {{ period.name }}</p>
                    {% endif %}
                </div>
                <div>
                    {% if period %}
                        <a href="{{ path('app_period_show', {id: period.id}) }}" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Retour à la période
                        </a>
                    {% else %}
                        <a href="{{ path('app_expense_index') }}" class="btn btn-outline-secondary">
                            <i class="bi bi-arrow-left"></i> Retour
                        </a>
                    {% endif %}
                </div>
            </div>
        </div>
    </div>

    <div class="row justify-content-center">
        <div class="col-md-8 col-lg-6">
            <div class="card shadow-sm">
                <div class="card-header bg-danger text-white">
                    <h5 class="mb-0">
                        <i class="bi bi-plus-circle"></i>
                        Informations de la dépense
                    </h5>
                </div>
                <div class="card-body">
                    {{ form_start(form) }}
                        <div class="mb-3">
                            {{ form_label(form.description, 'Description', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                            {{ form_widget(form.description, {'attr': {'class': 'form-control', 'list': 'expense-suggestions'}}) }}
                            {{ form_errors(form.description) }}
                            <datalist id="expense-suggestions">
                                <option value="Courses alimentaires">
                                <option value="Essence">
                                <option value="Restaurant">
                                <option value="Électricité">
                                <option value="Eau">
                                <option value="Internet">
                                <option value="Téléphone">
                                <option value="Assurance">
                                <option value="Médicaments">
                                <option value="Vêtements">
                                <option value="Transport">
                                <option value="Loisirs">
                                <option value="Autre dépense">
                            </datalist>
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.amount, 'Montant (€)', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                            <div class="input-group">
                                {{ form_widget(form.amount, {'attr': {'class': 'form-control', 'step': '0.01', 'min': '0'}}) }}
                                <span class="input-group-text">€</span>
                            </div>
                            {{ form_errors(form.amount) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.date, 'Date', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                            {{ form_widget(form.date, {'attr': {'class': 'form-control'}}) }}
                            {{ form_errors(form.date) }}
                        </div>

                        <div class="mb-3">
                            {{ form_label(form.category, 'Catégorie', {'label_attr': {'class': 'form-label fw-bold'}}) }}
                            {{ form_widget(form.category, {'attr': {'class': 'form-select'}}) }}
                            {{ form_errors(form.category) }}
                            <div class="form-text">
                                <i class="bi bi-info-circle"></i>
                                Seules les catégories de type "Dépenses" sont affichées.
                                <a href="{{ path('app_category_new') }}" class="text-decoration-none" target="_blank">
                                    Créer une nouvelle catégorie
                                </a>
                            </div>
                        </div>

                        <div class="d-grid gap-2 d-md-flex justify-content-md-end">
                            {% if period %}
                                <a href="{{ path('app_period_show', {id: period.id}) }}" class="btn btn-outline-secondary me-md-2">
                                    <i class="bi bi-x-circle"></i> Annuler
                                </a>
                            {% else %}
                                <a href="{{ path('app_expense_index') }}" class="btn btn-outline-secondary me-md-2">
                                    <i class="bi bi-x-circle"></i> Annuler
                                </a>
                            {% endif %}
                            <button type="submit" class="btn btn-danger">
                                <i class="bi bi-check-circle"></i> Créer la dépense
                            </button>
                        </div>
                    {{ form_end(form) }}
                </div>
            </div>
        </div>
    </div>
</div>

<script>
document.addEventListener('DOMContentLoaded', function() {
    // Validation du montant
    const amountInput = document.getElementById('expense_amount');
    if (amountInput) {
        amountInput.addEventListener('input', function() {
            const value = parseFloat(this.value);
            if (value < 0) {
                this.setCustomValidity('Le montant ne peut pas être négatif');
            } else {
                this.setCustomValidity('');
            }
        });
    }
    
    // Validation de la date
    const dateInput = document.getElementById('expense_date');
    if (dateInput) {
        dateInput.addEventListener('change', function() {
            const selectedDate = new Date(this.value);
            const today = new Date();
            today.setHours(23, 59, 59, 999); // Fin de journée
            
            if (selectedDate > today) {
                if (!confirm('La date sélectionnée est dans le futur. Êtes-vous sûr de vouloir continuer ?')) {
                    this.value = '';
                }
            }
        });
    }
});
</script>
{% endblock %} 